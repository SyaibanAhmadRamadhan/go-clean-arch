openapi: '3.0.2'
info:
  title: ACCOUNT SERVICE
  version: '1.0'
servers:
  - url: http://localhost
paths:
  /account/{profile-id}:
    parameters:
      - $ref: '#/components/parameters/AppId'
      - $ref: '#/components/parameters/Key'
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/UserId'
    put:
      parameters:
        - name: profile-id
          in: path
          required: true
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - full_name
                - gender
              properties:
                full_name:
                  type: string
                gender:
                  type: string
                  enum:
                    - male
                    - female
                  description: >
                    * enum : male | female | undefinied
                phone_number:
                  type: string
                image:
                  type: string
                  format: binary
                quote:
                  type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      user:
                        $ref: '#/components/schemas/user'
                      profile:
                        $ref: '#/components/schemas/profile'
        400:
          $ref: '#/components/responses/400BadRequest'
        422:
          $ref: '#/components/responses/422UnprocessableEntity'
        403:
          $ref: '#/components/responses/403Forbidden'
        401:
          $ref: '#/components/responses/401UnAuthorization'
        408:
          $ref: '#/components/responses/408RequestTimeout'
        404:
          $ref: '#/components/responses/404NotFound'
        500:
          $ref: '#/components/responses/500InternalServerError'

  /profile:
    parameters:
      - $ref: '#/components/parameters/AppId'
      - $ref: '#/components/parameters/Key'
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/UserId'
    get:
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                    data:
                      $ref: '#/components/schemas/profile'
        400:
          $ref: '#/components/responses/400BadRequest'
        403:
          $ref: '#/components/responses/403Forbidden'
        401:
          $ref: '#/components/responses/401UnAuthorization'
        408:
          $ref: '#/components/responses/408RequestTimeout'
        404:
          $ref: '#/components/responses/404NotFound'
        500:
          $ref: '#/components/responses/500InternalServerError'

  /profile-config:
    parameters:
      - $ref: '#/components/parameters/AppId'
      - $ref: '#/components/parameters/Key'
      - $ref: '#/components/parameters/Authorization'
      - $ref: '#/components/parameters/UserId'
    get:
      parameters:
        - in: path
          name: profile-id *id profile
          required: true
        - in: path
          name: config-name *DAILY_NOTIFY OR MONTHLY_PERIOD
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/profileConfig'
        400:
          $ref: '#/components/responses/400BadRequest'
        403:
          $ref: '#/components/responses/403Forbidden'
        401:
          $ref: '#/components/responses/401UnAuthorization'
        408:
          $ref: '#/components/responses/408RequestTimeout'
        404:
          $ref: '#/components/responses/404NotFound'
        500:
          $ref: '#/components/responses/500InternalServerError'
    post:
      parameters:
        - in: path
          name: profile-id *profile id
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                config_value:
                  type: string
                  example: "19:00 Asia/Jakarta OR 29"
                  description: "kalo MONTHLY_PERIOD date aja"
                days:
                  type: array
                  items:
                    type: string
                  example:
                    - monday
                    - tuesday
                  description: "kalo MONTHLY_PERIOD empty aja days"
                config_name:
                  type: string
                  example: "MONTHLY_PERIOD OR DAILY_NOTIFY"
                status:
                  type: string
                  example: "on ATAU off"
                token:
                  type: string
                  example: "i1ouhsidh9812asjh"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/profileConfig'
        400:
          $ref: '#/components/responses/400BadRequest'
        403:
          $ref: '#/components/responses/403Forbidden'
        401:
          $ref: '#/components/responses/401UnAuthorization'
        408:
          $ref: '#/components/responses/408RequestTimeout'
        404:
          $ref: '#/components/responses/404NotFound'
        500:
          $ref: '#/components/responses/500InternalServerError'
    put:
      parameters:
        - in: path
          name: profile-id *id profile
          required: true
        - in: path
          name: config-name *DAILY_NOTIFY OR MONTHLY_PERIOD
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                config_value:
                  type: string
                  example: "19:00 Asia/Jakarta OR 29"
                  description: "kalo MONTHLY_PERIOD date aja"
                days:
                  type: array
                  items:
                    type: string
                  example:
                    - monday
                    - tuesday
                  description: "kalo MONTHLY_PERIOD empty aja days"
                status:
                  type: string
                  example: "on ATAU off"
                token:
                  type: string
                  example: "i1ouhsidh9812asjh"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/profileConfig'
        400:
          $ref: '#/components/responses/400BadRequest'
        403:
          $ref: '#/components/responses/403Forbidden'
        401:
          $ref: '#/components/responses/401UnAuthorization'
        408:
          $ref: '#/components/responses/408RequestTimeout'
        404:
          $ref: '#/components/responses/404NotFound'
        500:
          $ref: '#/components/responses/500InternalServerError'

components:
  parameters:
    AppId:
      in: header
      name: App-Id
      schema:
        type: string
      description: app id, will get from backend tim
    Authorization:
      in: header
      name: Authorization
      schema:
        type: string
      description: auth token, prefix token must be `Bearer token`
    Key:
      in: header
      name: X-Key
      schema:
        type: string
      description: key, will get from backend tim
    UserId:
      in: header
      name: User-Id
      schema:
        type: string
      description: userid, from data user
  schemas:
    user:
      type: object
      properties:
        id:
          type: string
          example: "userid_1"
        full_name:
          type: string
          example: "rama"
        gender:
          type: string
          example: male
        image:
          type: string
          example: "/files/user-images/public/rama.png"
        username:
          type: string
          example: "ibanrmaa"
        email:
          type: string
          example: "ibanrama29@gmail.com"
        email_format:
          type: string
          example: "i••••9@gmail.com"
        phone_number:
          type: string
          example: "0889919230"
        activated:
          type: boolean
          example: true

    profileConfig:
      type: object
      properties:
        profile_config_id:
          type: string
          example: "profileconfigid_1"
        profile_id:
          type: string
          example: "profileid_1"
        config_name:
          type: string
          example: "DAILY_NOTIF"
        config_value:
          type: string
          example: "19:00 Asia/Jakarta"
        status:
          type: string
          example: "on"

    profile:
      type: object
      properties:
        profile_id:
          type: string
          example: "profileid_1"
        quote:
          type: string
          example: "semangat"
    400ERROR:
      type: object
      properties:
        errors:
          type: object
          properties:
            field1:
              type: array
              items:
                type: string
              example:
                - "field must be string"
                - "required"
            field2:
              type: array
              items:
                type: string
              example:
                - "field2 must be integer"
    422ERROR:
       type: object
       properties:
         errors:
           type: object
           properties:
             field1:
               type: string
               example: "unprocessable entity"
    403ERROR:
      type: object
      properties:
        errors:
          type: string
          example: "FORBIDDEN"
    401ERROR:
      type: object
      properties:
        errors:
          type: string
          example: "UN AUTHORIZATION"
    408ERROR:
      type: object
      properties:
        errors:
          type: string
          example: "REQUEST TIMEOUT"
    404ERROR:
      type: object
      properties:
        errors:
          type: string
          example: "NOT FOUND"
    500ERROR:
      type: object
      properties:
        errors:
          type: string
          example: "INTERNAL SERVER ERROR"

  responses:
    400BadRequest:
      description: BAD REQUEST
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/400ERROR'
    422UnprocessableEntity:
      description: UNPROCESSABLE ENTITY
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/422ERROR'
    403Forbidden:
      description: FORBIDDEN
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/403ERROR'
    401UnAuthorization:
      description: UN AUTHORIZATION
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/401ERROR'
    408RequestTimeout:
      description: REQUEST TIMEOUT
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/408ERROR'
    404NotFound:
      description: NOT FOUND
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/404ERROR'
    500InternalServerError:
      description: INTERNAL SERVER ERROR
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/500ERROR'

